# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*.tfplan
*.tfplan.json

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore any local Terraform lock files
.terraform.lock.hcl

terraform.txt

# Ignore any backup files
*.backup

# Ignore any log files
*.log

# Ignore any temporary files
*.tmp
*.temp

# Ignore any IDE-specific files
.vscode/
.idea/
*.swp
*.swo
*~

# Ignore OS-specific files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Ignore any environment-specific files
.env
.env.local
.env.*.local

# Ignore any secrets or sensitive files
secrets/
*.pem
*.key
*.crt
*.p12
*.pfx

# Allow terraform.tfvars.example to be tracked
!terraform.tfvars.example 